Validate Binary Search Tree (BST)

ðŸ§© Problem Statement

Check if a given binary tree is a valid Binary Search Tree (BST).

In a BST:

Left subtree values < parentâ€™s value

Right subtree values > parentâ€™s value

No duplicates allowed


ðŸ’¡ Code

class Solution:
    def isValidBST(self, root):
        def valid(node, minimum, maximum):
            if not node:
                return True
            if not (minimum < node.val < maximum):
                return False
            return valid(node.left, minimum, node.val) and valid(node.right, node.val, maximum)
        
        return valid(root, float('-inf'), float('inf'))

ðŸ§  Explanation

Use recursion with range (minimum, maximum) to ensure each nodeâ€™s value fits its valid range.

Update range while going down:

Left child â†’ (minimum, node.val)

Right child â†’ (node.val, maximum)


If any node violates the range â†’ return False.


ðŸ§© Example

Input: [1,1]
Tree:
    1
   /
  1
Output: False   # Because left child equals parent
