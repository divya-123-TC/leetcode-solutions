Count and Say

## Problem Statement
The *Count and Say sequence* is the sequence of integers where:
- The first term is "1".
- Each subsequent term is generated by describing the previous term, digit by digit.

Example:
- 1 → "11" (one 1)
- 11 → "21" (two 1s)
- 21 → "1211" (one 2, one 1)

Given an integer n, return the n-th term of the sequence as a string.



## Example

*Input:*

n = 4

*Output:*

"1211"

*Explanation:*
1. term 1 = "1"  
2. term 2 = "11" (one 1)  
3. term 3 = "21" (two 1s)  
4. term 4 = "1211" (one 2, one 1)  



## Approach

1. Start with "1" as the base string.
2. For each iteration, scan the current string and *count consecutive identical digits*.
3. Build the next string by concatenating "count + digit" for each group.
4. Repeat this process n-1 times to get the nth term.



## Complexity Analysis
- *Time Complexity:*  
  O(L) per iteration, where L is the length of the string at that step.  
  Since strings grow gradually, this is efficient for n ≤ 30 (LeetCode constraint).
- *Space Complexity:*  
  O(L) for storing the current string.

