Next Greater Element II 

Problem Statement

Given a circular array nums, find the next greater element for each element.
If no greater element exists, return -1.

Example 1
Input: nums = [1,2,1]
Output: [2,-1,2]
Explanation:

Next greater for 1 â†’ 2

Next greater for 2 â†’ -1

Next greater for 1 â†’ 2





Approach ðŸš€

We use a stack to efficiently track elements:

1. Initialize ng = [-1]*n to store next greater elements.


2. Initialize an empty stack st to store indices.


3. Traverse the array twice (for circular behavior):

num = nums[i % n]

While st is not empty and nums[st[-1]] < num:

ng[st.pop()] = num â†’ assign next greater


Push index only in the first pass: if i < n: st.append(i)



4. Return ng.






Complexity ðŸ“Š

Time Complexity: O(n) â€” each element is pushed and popped at most once

Space Complexity: O(n) â€” for the stack





Example Dry Run ðŸ”Ž

Input: nums = [1,2,1]

Steps:

i=0 â†’ push 0 â†’ stack=[0]

i=1 â†’ 2 > 1 â†’ pop 0 â†’ ng[0]=2 â†’ push 1 â†’ stack=[1]

i=2 â†’ 1 < 2 â†’ push 2 â†’ stack=[1,2]

i=3 â†’ wrap â†’ 1 < 2 â†’ pop 2 â†’ ng[2]=2


Output: [2, -1, 2]
