Sliding Window Maximum

Problem Statement

Given an array nums and a window size k, find the maximum element in each sliding window of size k.

Example:

Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]




Approach

Use a deque to store indices of elements.

Keep deque in decreasing order of values.

Front of deque (q[0]) is always the maximum of current window.

Remove indices out of window from front.

Remove indices whose values are smaller than current number from back.

Append maximum to result once window size ≥ k.




Step by Step Dry Run

Input: nums = [1,3,-1,-3,5,3,6,7], k=3

idx	num	deque (indices)	Current window	Maximum

0	1	[0]	[1]	-
1	3	[1]	[1,3]	-
2	-1	[1,2]	[1,3,-1]	3
3	-3	[1,2,3]	[3,-1,-3]	3
4	5	[4]	[-1,-3,5]	5
5	3	[4,5]	[-3,5,3]	5
6	6	[6]	[5,3,6]	6
7	7	[7]	[3,6,7]	7


Output: [3,3,5,5,6,7]




Complexity

Time: O(n) → each element pushed/popped at most once.

Space: O(k) → deque can hold at most k indices.
